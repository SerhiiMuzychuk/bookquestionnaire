<?php

use Drupal\Component\Utility\Html;
use Drupal\Core\Form\FormStateInterface;
use Drupal\paragraphs\Entity\Paragraph;

/**
 * Implements hook_mail().
 */
function akf_form_invitation_mail($key, &$message, $params) {
  $options = array(
    'langcode' => $message['langcode'],
  );
  switch ($key) {
    case 'generate_invite':
      $message['headers']['Content-Type'] = 'text/html; charset=UTF-8; format=flowed; delsp=yes';
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['subject'] = t('Invitation to the discussion: @title', ['@title' => $params['title']], $options);
      $theme_body = [
       '#theme' => 'mail_invitation',
       '#text' => $params['body'],
       '#link' => $params['link'],
       '#site_name' => \Drupal::config('system.site')->get('name'),
      ];
      $mail_body = drupal_render($theme_body);
      $message['body'][] = Html::escape($mail_body);
      break;
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function akf_form_invitation_form_user_register_form_alter(&$form, FormStateInterface $form_state) {
  if (\Drupal::request()->query->get('id')) {
    $query = \Drupal::database()->select('invites_discussion', 'inv');
    $query->fields('inv', ['mail', 'discussion', 'role']);
    $query->condition('inv.hash', \Drupal::request()->query->get('id'));
    $output = $query->execute()->fetchAssoc();
    if ($output) {
      $form['account']['mail']['#default_value'] = $output['mail'];
    }
  }
}

/**
 * Implements hook_user_insert().
 */
function akf_form_invitation_user_insert($account) {
  if (\Drupal::request()->query->get('id')) {
    $query = \Drupal::database()->select('invites_discussion', 'inv');
    $query->fields('inv', ['mail', 'discussion', 'role']);
    $query->condition('inv.hash', \Drupal::request()->query->get('id'));
    $output = $query->execute()->fetchAssoc();
    if ($output) {
      $form['account']['mail']['#default_value'] = $output['mail'];
      // Create paragraph.
      $paragraph = Paragraph::create(['type' => 'discussion',]);
      $paragraph->set('field_discussion', $output['discussion']);
      $paragraph->set('field_discussion_role', $output['role']);
      $paragraph->isNew();
      $paragraph->save();
      // Add paragraph to user.
      $user =  user_load($account->id());
      $current = $user->get('field_discussion_role')->getValue();
      $current[] = [
        'target_id' => $paragraph->id(),
        'target_revision_id' => $paragraph->getRevisionId(),
      ];
      $user->set('field_discussion_role', $current);
      $user->save();
      // Change status in db inv.
      $query = \Drupal::database()->update('invites_discussion');
      $query->fields([
        'status' => 1,
      ]);
      $query->condition('hash', \Drupal::request()->query->get('id'));
      $query->execute();
    }
  }
}

/**
 * Implements hook_theme().
 */
function akf_form_invitation_theme($existing, $type, $theme, $path) {
  return [
    'invitation' => [
      'variables' => [
        'error' => NULL,
        'invite' => NULL,
        'body' => NULL,
        'reject' => NULL,
        'acсept' => NULL,
      ],
    ],
    'mail_invitation' => [
      'variables' => [
        'text' => NULL,
        'link' => NULL,
        'site_name' => NULL,
      ],
    ],
  ];
}
